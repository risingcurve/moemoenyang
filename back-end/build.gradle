plugins {
    id 'java'
    id 'org.springframework.boot' version '2.7.7'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    //querydsl 추가
    id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'

    // openvidu
    id 'java-library'
    id 'maven-publish'

}

group = 'com.ssafy'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    // openvidu
    maven {
        url = uri('https://repo.maven.apache.org/maven2/')
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
<<<<<<< HEAD
=======
    compileOnly 'org.projectlombok:lombok'
//    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
>>>>>>> 3cc6aa94bafbc731c5de292e8f06125e8cd00e21
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis-reactive'
    compileOnly 'org.projectlombok:lombok'
//    runtimeOnly 'com.mysql:mysql-connector-j'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'io.projectreactor:reactor-test'

    //Swagger
    implementation 'io.springfox:springfox-boot-starter:3.0.0'
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'

    //Querydsl
    implementation 'com.querydsl:querydsl-jpa:5.0.0'
    implementation 'com.querydsl:querydsl-apt:5.0.0'

    //JWT 1 기존에 있던거
//    implementation 'com.auth0:java-jwt:3.10.3'
    //JWT 2 인프런 강의 따라가기용
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    //추가
    implementation 'com.google.guava:guava:29.0-jre'
    annotationProcessor 'com.google.guava:guava:29.0-jre'

    //Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    //Email
    implementation 'org.springframework.boot:spring-boot-starter-mail'


    //AWS
//    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    //AWS 에러나서 일단 주석처리
//    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'

    // Openvidu 필요 없어서 주석처리
//    api("org.springframework.boot:spring-boot-starter-web:2.7.0")
//    api("io.openvidu:openvidu-java-client:2.25.0")

    // Validation
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // JSON in MySQL
    implementation("com.vladmihalcea:hibernate-types-52:2.16.2")
}

tasks.named('test') {
    useJUnitPlatform()
}

//querydsl 추가 시작
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}
//querydsl 추가 끝